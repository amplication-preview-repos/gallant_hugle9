/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmployeeInfo as PrismaEmployeeInfo } from "@prisma/client";

export class EmployeeInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeInfo.count(args);
  }

  async employeeInfos(
    args: Prisma.EmployeeInfoFindManyArgs
  ): Promise<PrismaEmployeeInfo[]> {
    return this.prisma.employeeInfo.findMany(args);
  }
  async employeeInfo(
    args: Prisma.EmployeeInfoFindUniqueArgs
  ): Promise<PrismaEmployeeInfo | null> {
    return this.prisma.employeeInfo.findUnique(args);
  }
  async createEmployeeInfo(
    args: Prisma.EmployeeInfoCreateArgs
  ): Promise<PrismaEmployeeInfo> {
    return this.prisma.employeeInfo.create(args);
  }
  async updateEmployeeInfo(
    args: Prisma.EmployeeInfoUpdateArgs
  ): Promise<PrismaEmployeeInfo> {
    return this.prisma.employeeInfo.update(args);
  }
  async deleteEmployeeInfo(
    args: Prisma.EmployeeInfoDeleteArgs
  ): Promise<PrismaEmployeeInfo> {
    return this.prisma.employeeInfo.delete(args);
  }
}
